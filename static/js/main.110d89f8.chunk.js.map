{"version":3,"sources":["app/GlobalStyle.js","app/Header.js","app/components/Card.js","store/actions/pomodoro.js","store/actions/toDoList.js","app/components/Horizontal.js","app/components/BtnIcon.js","app/components/Button.js","app/components/Text.js","app/containerPomodoro/cardTimer/timer/ModalEditTimer.js","app/containerPomodoro/cardTimer/timer/Timer.js","app/components/Line.js","app/containerPomodoro/cardTimer/SelectedPomodoro.js","app/components/InputAdd.js","app/components/InputNoBorder.js","app/containerPomodoro/cardTimer/toDoList/ItemList.js","app/components/ContainerList.js","app/components/ItemListPomodoro.js","app/containerPomodoro/cardTimer/toDoList/ModalSelectPomodoro.js","app/containerPomodoro/cardTimer/toDoList/index.js","app/containerPomodoro/cardTimer/index.js","app/containerPomodoro/cardList/CounterPomodoro.js","app/containerPomodoro/cardList/ListPomodoros.js","app/containerPomodoro/cardList/index.js","app/containerPomodoro/index.js","store/state.js","store/helpers/pomodoroHelpers.js","store/helpers/taskHelpers.js","store/reducer.js","store/index.js","app/index.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","HeaderStyle","styled","header","Header","size","color","className","Card","section","width","height","margin","pomodoro","add","indicator","name","type","value","selected","completed","time","toDoList","edit","del","select","next","done","indexTask","newNameTask","change","moving","indicatorPomodoro","objTask","newIndicator","Horizontal","div","position","align","justify","BtnIcon","button","background","shadow","Btn","Button","text","props","Text","h3","nowrap","weight","scratched","cursor","Modal","Input","input","mf","ModalEditTimer","closeModal","objTimer","defineObjTimer","convertTimer","useState","int","min","rest","timer","setTimer","onChange","e","target","onClick","string","style","autoFocus","setPageTitle","newTitle","document","title","arrayTimer","split","parseInt","seg","Container","DisplayTimer","h2","Timer","obj","useEffect","oldObj","idInterval","dispatch","resetTimer","setOldObj","useDispatch","modalTimer","setModalTimer","localStorage","getItem","setObjTimer","soundAlert","Audio","setIdInterval","reset","setReset","conclude","setConclude","setRest","soundOn","setSoundOn","changeTimer","timerDecrement","play","newTimer","clearTimeout","sound","initialTimer","minInit","segInit","calcTimer","slice","id","setInterval","pomodoroTime","restTime","setItem","Line","SelectedPomodoro","countToDo","length","countToDoCompleted","forEach","InputAdd","onClickAdd","InputNoBorder","padding","hidden","ContainerbtnDel","ItemList","checked","openModal","onEdit","onDelete","changeDone","openEdit","setOpenEdit","setValue","placeholder","onBlur","ContainerList","ContainerBtnDel","ItemListPomodoro","Icon","icon","num","onSelect","ModalSelectPomodoro","selectedObject","array","useSelector","state","pomodoros","map","key","selectIcon","ToDoList","newTask","setNewTask","modalOpen","setModalOpen","setSelectedObject","event","getElementById","focus","index","window","confirm","CardTimer","pomodoroSelected","find","CounterPomodoro","countPomodoro","countPomodoroCompleted","ListPomodoros","newName","undefined","CardList","arrayPomodoros","newPomodoro","setNewPomodoro","main","ContainerPomodoro","INITIAL_STATE","findAndModifyPomodoro","functionModify","verifyCompletedPomodoro","objDoneFalse","task","newObj","newArrayPomodoros","editTask","delTask","filter","changeDoneTask","movingTask","reducer","action","editNamePomodoro","newArray","removePomodoro","rearrangingArray","insertTimePomodoro","indexPomodoro","findIndex","nextPomodoro","alert","store","createStore","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"u1BAGA,IAqBeA,EArBKC,YAAH,K,kYCYjB,IAAMC,EAAcC,IAAOC,OAAV,KAgBFC,EA1Bf,WACI,OACI,kBAACH,EAAD,KACI,kBAAC,IAAD,CAASI,KAAK,OAAOC,MAAM,YAC3B,wBAAIC,UAAU,SAAd,c,kOCNZ,IASeC,EATFN,IAAOO,QAAV,KAIG,oBAAGC,MAAH,kBAAW,OAAX,KACC,oBAAGC,OAAH,kBAAY,OAAZ,KACA,oBAAGC,OAAH,kBAAY,SAAZ,K,cCqCCC,EA9CE,CACbC,IAAK,SAACC,EAAWC,GAAZ,MAAsB,CACvBC,KAAM,eACNC,MAAO,CACHH,YACAC,OACAG,UAAU,EACVC,WAAW,EACXC,MAAM,EACNC,SAAU,MAIlBC,KAAM,SAACR,EAAWC,GAAZ,MAAsB,CACxBC,KAAM,gBACNC,MAAO,CACHH,YACAC,UAIRQ,IAAK,SAACT,GAAD,MAAgB,CACjBE,KAAM,eACNC,MAAOH,IAGXU,OAAQ,SAACV,GAAD,MAAgB,CACpBE,KAAM,kBACNC,MAAOH,IAGXM,KAAM,SAACN,EAAWM,GAAZ,IAAkBD,EAAlB,8DAAyC,CAC3CH,KAAM,uBACNC,MAAO,CACHH,YACAM,OACAD,eAIRM,KAAM,SAACX,GAAD,MAAgB,CAClBE,KAAM,gBACNC,MAAOH,KCIAO,EA9CE,CACbR,IAAK,SAACC,EAAWC,GAAZ,MAAsB,CACvBC,KAAM,WACNC,MAAO,CACHS,MAAM,EACNZ,YACAC,UAIRO,KAAM,SAACR,EAAWa,EAAWC,GAAvB,MAAwC,CAC1CZ,KAAM,YACNC,MAAO,CACHH,YACAa,YACAC,iBAIRL,IAAK,SAACT,EAAWa,GAAZ,MAA2B,CAC5BX,KAAM,WACNC,MAAO,CACHH,YACAa,eAIRE,OAAQ,SAACf,EAAWa,GAAZ,MAA2B,CAC/BX,KAAM,cACNC,MAAO,CACHH,YACAa,eAIRG,OAAQ,SAACC,EAAmBJ,EAAWK,EAASC,GAAxC,MAA0D,CAC9DjB,KAAM,cACNC,MAAO,CACHc,oBACAJ,YACAK,UACAC,mB,oMCtCZ,IASeC,EATIjC,IAAOkC,IAAV,KACH,oBAAG1B,MAAH,kBAAW,UAAX,KACC,oBAAGE,OAAH,kBAAY,IAAZ,KACE,oBAAGyB,SAAH,kBAAc,UAAd,KAEG,oBAAGC,MAAH,kBAAW,SAAX,KACI,oBAAGC,QAAH,kBAAa,UAAb,K,0iBCNvB,IA2BeC,EA3BCtC,IAAOuC,OAAV,KACI,oBAAG/B,MAAH,kBAAW,OAAX,KACC,oBAAGC,OAAH,kBAAY,OAAZ,KAUH,oBAAGC,OAAH,kBAAY,IAAZ,KACF,oBAAGN,MAAH,kBAAW,UAAX,KACK,oBAAGoC,WAAH,kBAAgB,cAAhB,KAEZ,qBAAGC,OAAsB,+CAAiD,Q,weCThF,IAAMC,EAAM1C,IAAOuC,OAAV,KASI,oBAAGnC,MAAH,kBAAW,UAAX,KACK,oBAAGoC,WAAH,kBAAgB,UAAhB,KAUHG,EA1Bf,YAAqC,IAAnBC,EAAkB,EAAlBA,KAASC,EAAS,wBAChC,OACI,kBAACH,EAAQG,EAAQD,I,gOCHzB,IAUeE,EAVF9C,IAAO+C,GAAV,KAEJ,qBAAGC,OAAsB,uBAAyB,QAC1C,oBAAGtC,OAAH,kBAAY,IAAZ,KACG,oBAAGP,KAAH,kBAAU,SAAV,KACE,oBAAG8C,OAAH,kBAAY,MAAZ,KACI,qBAAGC,UAA4B,eAAiB,aACzD,oBAAGC,OAAH,kBAAY,UAAZ,K,0dCsDd,IAAMC,EAAQpD,IAAOO,QAAV,KASL8C,EAAQrD,IAAOsD,MAAV,KAEQ,oBAAGC,GAAH,kBAAQ,OAAR,KAOJC,EAzEf,YAAiF,IAAvDC,EAAsD,EAAtDA,WAAYC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,eAAgBC,EAAgB,EAAhBA,aAAgB,EAElDC,oBAAS,WAI/B,MAAO,CAAElD,SAHiBiD,EAAaE,IAAIJ,EAAS/C,UAA5CoD,IAGWC,KAFGJ,EAAaE,IAAIJ,EAASM,MAAxCD,QAJgE,mBAErEE,EAFqE,KAE9DC,EAF8D,KAStEC,EAAW,SAAAC,GAAM,IAAD,EACMA,EAAEC,OAAlBvD,EADU,EACVA,KAAME,EADI,EACJA,MACdkD,EAAS,2BAAKD,GAAN,kBAAcnD,EAAOE,MAmBjC,OACI,kBAACoC,EAAD,KACI,kBAAC,EAAD,CAAM5C,MAAM,QAAQC,OAAO,SACvB,kBAAC,EAAD,CAAYC,OAAO,kBACf,kBAAC,EAAD,CAASF,MAAM,OAAOC,OAAO,OAAO6D,QAbxB,WAAO,IAAD,EAHvB,CAAE3D,SAHQiD,EAAaW,OAAON,EAAMtD,SAAU,GAGlCqD,KAFNJ,EAAaW,OAAON,EAAMD,KAAM,IAMrCrD,EADsB,EACtBA,SAAUqD,EADY,EACZA,KAEdN,EAAS/C,WAAaA,GAAY+C,EAASM,OAASA,GAAML,EAAehD,EAAUqD,GAEvFP,MAQY,IAAmE,kBAAC,IAAD,CAAStD,KAAK,KAAKC,MAAM,YAA5F,KAEA,kBAAC,EAAD,CAAMD,KAAK,QAAQ8C,OAAO,MAAMvC,OAAO,UAAvC,iBAGJ,yBAAK8D,MAAO,CAAE9D,OAAQ,WAClB,kBAAC,EAAD,CAAYA,OAAO,YACf,kBAAC,EAAD,kBACA,kBAAC2C,EAAD,CAAOrC,MAAOiD,EAAMtD,SAAUG,KAAK,WAAWqD,SAAUA,EAAUpD,KAAK,SAAS0D,WAAS,KAG7F,kBAAC,EAAD,KACI,kBAAC,EAAD,kBACA,kBAACpB,EAAD,CAAOrC,MAAOiD,EAAMD,KAAMlD,KAAK,OAAOqD,SAAUA,EAAUpD,KAAK,SAASwC,GAAG,c,uhBC7CnG,IAAMmB,EAAe,SAAAC,GAAQ,OAAIC,SAASC,MAAQF,GAE5Cf,EAAe,CACjBE,IAAK,SAACG,GACF,IAAMa,EAAab,EAAMc,MAAM,KAK/B,MAAO,CAAEhB,IAHGiB,SAASF,EAAW,IAGlBG,IAFFD,SAASF,EAAW,MAKpCP,OAAQ,SAACR,EAAKkB,GAKV,OAHIlB,EAAM,IAAMA,GAAO,IAAGA,EAAG,WAAOA,IAChCkB,EAAM,KAAIA,EAAG,WAAOA,IAElB,GAAN,OAAUlB,EAAV,YAAiBkB,KAqMzB,IAAMC,EAAYlF,IAAOkC,IAAV,KAkBTiD,EAAenF,IAAOoF,GAAV,KACL,qBAAGpB,KAA+B,UAAZ,aAMpBqB,EA9Lf,YAAyB,IAARC,EAAO,EAAPA,IAEbC,qBAAU,WACFC,EAAO3E,YAAcyE,EAAIzE,WAA4B,KAAf4E,IACtCC,EAAS/E,EAASQ,KAAKqE,EAAO3E,UAAWoD,GAAO,IAChD0B,MAGAH,EAAO3E,YAAcyE,EAAIzE,YACzBqD,EAASoB,EAAInE,MAAQuC,EAAS/C,UAC9BiF,EAAUN,MAEf,CAACA,IAGJ,IAAMI,EAAWG,cAfG,EAmBgBhC,oBAAS,GAnBzB,mBAmBbiC,EAnBa,KAmBDC,EAnBC,OAuBYlC,mBAAS,CACrClD,SAAUqF,aAAaC,QAAQ,aAAe,QAC9CjC,KAAMgC,aAAaC,QAAQ,SAAW,UAzBtB,mBAuBbvC,EAvBa,KAuBHwC,EAvBG,KA0ChBC,EAAa,IAAIC,MAAM,4CA1CP,EA2CQvC,mBAASyB,GA3CjB,mBA2CbE,EA3Ca,KA2CLI,EA3CK,OA4CM/B,mBAASH,EAAS/C,UA5CxB,mBA4CbsD,EA5Ca,KA4CNC,EA5CM,OA6CgBL,mBAAS,IA7CzB,mBA6Cb4B,EA7Ca,KA6CDY,EA7CC,OA8CMxC,oBAAS,GA9Cf,mBA8CbyC,EA9Ca,KA8CNC,EA9CM,OA+CY1C,oBAAS,GA/CrB,mBA+Cb2C,EA/Ca,KA+CHC,EA/CG,OAgDI5C,oBAAS,GAhDb,mBAgDbG,EAhDa,KAgDP0C,EAhDO,OAiDU7C,oBAAS,GAjDnB,mBAiDb8C,EAjDa,KAiDJC,EAjDI,KAqDdC,GAAc,kBAAM3C,GAAS,SAAA/C,GAAS,IAAD,EAnExB,SAAAA,GAAS,IAAD,EACRyC,EAAaE,IAAI3C,GAA9B4C,EADqB,EACrBA,IAAKkB,EADgB,EAChBA,IASX,OAPY,IAARA,IACAlB,GAAO,EACPkB,EAAM,IAKH,CAAElB,MAAKkB,IAFdA,GAAO,GA6DkB6B,CAAe3F,GAA5B4C,EAF+B,EAE/BA,IAAKkB,EAF0B,EAE1BA,IAETlB,GAAO,GAAa,IAARkB,IACR0B,GAASR,EAAWY,OACxBN,GAAY,IAGhB,IAAMO,EAAWpD,EAAaW,OAAOR,EAAKkB,GAI1C,OAFAP,EAAa,GAAD,OAAIY,EAAIzE,UAAR,aAAsBmG,IAE3BA,MAmBLrB,GAAa,WACfsB,aAAaxB,GACbY,EAAc,IACdnC,EAASF,EAAON,EAASM,KAAON,EAAS/C,UACzC+D,EAAa,YACb6B,GAAS,GACTE,GAAY,IAiChB,OACI,kBAACvB,EAAD,KACI,kBAAC,EAAD,CAAY1E,MAAM,OAAOE,OAAO,aAAa2B,QAAQ,SAASF,SAAS,YACnE,kBAAC,EAAD,CAASmC,QA3GE,kBAAMyB,GAAc,IA2GG1F,UAAU,WAAWG,MAAM,OAAOC,OAAO,OAAO+B,WAAW,UAAUC,QAAM,GACzG,kBAAC,IAAD,CAAYtC,KAAK,QAGrB,kBAAC,EAAD,CAAYgC,SAAS,YACjB,kBAACgD,EAAD,CAAcnB,KAAMA,GAAOC,GAO3B,kBAAC,EAAD,CAASK,QAlBH,kBAAMsC,GAAW,SAAAM,GAAK,OAAKA,MAkBA7G,UAAU,QAAQG,MAAM,OAAOC,OAAO,OAAO+B,WAAW,UAAUC,QAAM,GACpGkE,EACG,kBAAC,IAAD,CAASxG,KAAK,OACd,kBAAC,IAAD,CAAYA,KAAK,UAMjC,kBAAC,EAAD,KACMqG,EACE,kBAAC,EAAD,CAAQlC,QAxDC,WACrB,GAAKN,EAUD0C,GAAQ,GACRf,KACAzB,EAASR,EAAS/C,UAClB+E,EAAS/E,EAASa,KAAK8D,EAAIzE,gBAbpB,CAEP,IAAMM,EA7HA,SAAC8C,EAAOkD,GAAkB,IAAD,EAClBvD,EAAaE,IAAIG,GAA9BF,EAD+B,EAC/BA,IAAKkB,EAD0B,EAC1BA,IAD0B,EAEArB,EAAaE,IAAIqD,GAA3CC,EAF0B,EAE/BrD,IAAmBsD,EAFY,EAEjBpC,IAEtB,OAAIlB,EAAM,EAICH,EAAaW,OAHL6C,IAAkB,EAAPrD,EAAW,GACtBsD,GAAW,GAAKpC,IAK5BkC,EAkHcG,CAAUrD,EAAOP,EAAS/C,UACvC+E,EAAS/E,EAASQ,KAAKmE,EAAIzE,UAAWM,GAAM,IAC5CuF,GAAQ,GACRf,KACAzB,EAASR,EAASM,QAiDyBpB,KAAK,WAAWJ,WAAW,UAAUpC,MAAM,UAC9E,kBAAC,EAAD,CAAQkE,QAlFL,WACf,GAAmB,KAAfmB,EAAJ,CAC0B,MAAtBxB,EAAMsD,MAAM,EAAG,IAAYd,GAAY,GAE3C,IAAMe,EAAKC,YAAYZ,GAAa,KACpCR,EAAcmB,GACdjB,GAAS,KA4EgC3D,KAAK,UAAUJ,WAAW,UAAUpC,MAAM,UAGzEkG,EACE,kBAAC,EAAD,CAAQhC,QAASqB,GAAY/C,KAAK,UAClC,kBAAC,EAAD,CAAQ0B,QA9EL,WACf2C,aAAaxB,GACbY,EAAc,IACVpC,IAAUP,EAAS/C,UAAU4F,GAAS,GAC1CE,GAAY,IA0E6B7D,KAAK,WAIzCkD,GAAc,kBAAC,EAAD,CAAgBrC,WA3If,kBAAMsC,GAAc,IA2IwBrC,SAAUA,EAAUC,eApIjE,WAAiD,IAAhD+D,EAA+C,uDAAhC,QAASC,EAAuB,uDAAZ,QACjDhH,EAAW+G,EACX1D,EAAO2D,EAEb3B,aAAa4B,QAAQ,WAAYjH,GACjCqF,aAAa4B,QAAQ,OAAQ5D,GAE7BkC,EAAY,CAAEvF,WAAUqD,SAEL,KAAfyB,GAAmBvB,EAASvD,IA2HoFiD,aAAcA,M,kLCzN1I,IAQeiE,EARF7H,IAAOkC,IAAV,KACJ,gBAAG1B,EAAH,EAAGA,MAAH,OAAeA,EAAK,iBAAaA,EAAb,KAAwB,mBCkBnCsH,MAhBf,YAAoC,IAARxC,EAAO,EAAPA,IAElByC,EAAYzC,EAAIlE,SAAS4G,OAC3BC,EAAqB,EAIzB,OAHA3C,EAAIlE,SAAS8G,SAAQ,SAAA5C,GAAG,QAAIA,EAAI7D,QAASwG,KAIrC,kBAAC,EAAD,CAAYvH,OAAO,UACf,kBAAC,EAAD,4BAAoB4E,EAAIzE,UAAxB,cAAuCyE,EAAIxE,OAC3C,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMkC,QAAM,GAAZ,UAAiBiF,EAAjB,cAAyCF,M,yZCFrD,IAAM7C,EAAYlF,IAAOkC,IAAV,KACD,oBAAGxB,OAAH,kBAAY,IAAZ,KAQR2C,EAAQrD,IAAOsD,MAAV,KASI6E,EA3Bf,YAAiE,IAAD,IAA5CC,kBAA4C,MAA/B,aAA+B,EAApB1H,EAAoB,EAApBA,OAAWmC,EAAS,uCAC5D,OACI,kBAAC,EAAD,CAAWnC,OAAQA,GACf,kBAAC,EAAUmC,GACX,kBAAC,EAAD,CAASyB,QAAS8D,GAAlB,IAA+B,kBAAC,IAAD,CAAOjI,KAAK,KAAKC,MAAM,YAAtD,O,+KCPZ,IAQeiI,GAROrI,IAAOsD,MAAV,KACN,oBAAG9C,MAAH,kBAAW,MAAX,K,ouBCgDb,IAAMF,GAAON,IAAOkC,IAAV,MACG,oBAAG1B,MAAH,kBAAW,UAAX,KAKE,oBAAG8H,QAAH,kBAAa,IAAb,KACD,oBAAG5H,OAAH,kBAAY,IAAZ,KACU,qBAAGO,SAA0B,UAAY,aAI1C,oBAAGoB,QAAH,kBAAa,UAAb,KAGT,oBAAGc,OAAH,kBAAY,UAAZ,KAER,qBAAGoF,OAAsB,oBAAsB,QAW/CC,GAAkBxI,IAAOkC,IAAV,MAMNuG,GA7Ef,YAA0F,IAAtE5H,EAAqE,EAArEA,UAAW+B,EAA0D,EAA1DA,KAAM8F,EAAoD,EAApDA,QAASC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAAc,EAErDjF,oBAAS,GAF4C,mBAE9EkF,EAF8E,KAEpEC,EAFoE,OAG3DnF,mBAASjB,GAHkD,mBAG9E5B,EAH8E,KAGvEiI,EAHuE,KAerF,OACI,kBAAC,EAAD,CAAYvI,OAAO,YACf,kBAAC,GAAD,CAAM4D,QAASwE,EAAYR,QAAQ,QAAQnF,OAAO,UAAUlC,SAAUyH,GACjEA,EACG,kBAAC,IAAD,CAAYvI,KAAK,KAAKC,MAAM,YAC5B,kBAAC,IAAD,CAAwBD,KAAK,KAAKC,MAAM,aAIhD,kBAAC,GAAD,CAAMM,OAAO,QAAQO,SAAUyH,GAC3B,kBAAC,EAAD,CAAMhI,OAAO,gBAAgBG,GAC7B,kBAAC,EAAD,CAASyD,QAASqE,GAAlB,IAA8B,kBAAC,IAAD,CAAiBxI,KAAK,KAAKC,MAAM,YAA/D,MAGJ,kBAAC,GAAD,CAAMC,UAAU,QAAQG,MAAM,OAAO8H,QAAQ,eAAejG,QAAQ,gBAAgBpB,SAAUyH,EAASH,QAAM,GACvGK,IAAWG,EACT,kBAAC,EAAD,CAAMzE,QA1BJ,kBAAM0E,GAAY,IA0BM9F,UAAWwF,EAASvF,OAAO,QAAQP,GAC7D,kBAAC,GAAD,CAAesG,YAAY,SAASlI,MAAOA,EAAOmD,SAzBjD,SAAAC,GAAC,OAAI6E,EAAS7E,EAAEC,OAAOrD,QAyB8CmI,OAvBvE,WACXP,EAAO5H,GACPgI,GAAY,IAqBsFvE,WAAS,IAGnG,kBAAC+D,GAAD,CAAiBnI,UAAU,QACvB,kBAAC,EAAD,CAASiE,QAASuE,GAAlB,IAA6B,kBAAC,IAAD,CAAiB1I,KAAK,KAAKC,MAAM,YAA9D,S,uJC1CpB,IAOegJ,GAPOpJ,IAAOkC,IAAV,MACL,oBAAGxB,OAAH,kBAAY,SAAZ,KACC,oBAAG4H,QAAH,kBAAa,SAAb,KACD,oBAAG7H,OAAH,kBAAY,UAAZ,K,kyBCwCd,IAAMH,GAAON,IAAOkC,IAAV,MAKK,oBAAGoG,QAAH,kBAAa,IAAb,KACD,oBAAG5H,OAAH,kBAAY,WAAZ,KAuBR2I,GAAkBrJ,IAAOkC,IAAV,MAKNoH,GAvEf,YAAwF,IAAtDC,EAAqD,EAA3DC,KAAYC,EAA+C,EAA/CA,IAAK7G,EAA0C,EAA1CA,KAAMzB,EAAoC,EAApCA,KAAMuI,EAA8B,EAA9BA,SAAUd,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAAY,EAEnDhF,oBAAS,GAF0C,mBAE5EkF,EAF4E,KAElEC,EAFkE,OAGzDnF,mBAASjB,GAHgD,mBAG5E5B,EAH4E,KAGrEiI,EAHqE,KAenF,OACI,kBAAC,GAAD,CAAM3E,QAASoF,EAAU5I,KAAK,WAAWT,UAAU,QAAQiI,QAAQ,SAASjG,QAAQ,iBAChF,kBAAC,EAAD,CAAY7B,MAAM,QACb+I,GAAQ,kBAACA,EAAD,MAET,kBAAC,EAAD,CAAM7I,OAAO,eAAesC,QAAM,GAAlC,UAAuCyG,EAAvC,QAEEb,GAAUG,EACR,kBAAC,GAAD,CAAevI,MAAM,MAAM0I,YAAY,WAAWlI,MAAOA,EAAOmD,SAhB/D,SAAAC,GAAC,OAAI6E,EAAS7E,EAAEC,OAAOrD,QAgB4DmI,OAdrF,WACXP,EAAO5H,GACPgI,GAAY,IAYoGvE,WAAS,IAC7G,kBAAC,EAAD,CAAMH,QAnBJ,kBAAM0E,GAAY,IAmBM7F,OAAO,QAAQP,IAIhDzB,GAAQ,kBAAC,EAAD,CAAMd,UAAU,OAAO4C,OAAO,MAAM9C,KAAK,OAAOgB,GAExD0H,GAAY,kBAACQ,GAAD,CAAiBhJ,UAAU,QACpC,kBAAC,EAAD,CAASS,KAAK,SAASwD,QAASuE,GAAhC,IAA2C,kBAAC,IAAD,CAAiB1I,KAAK,KAAKC,MAAM,YAA5E,Q,oYCahB,IAAMgD,GAAQpD,IAAOO,QAAV,MAYIoJ,GApDf,YAA8D,IAA/BC,EAA8B,EAA9BA,eAAgBnG,EAAc,EAAdA,WAEnC3B,EAA0C8H,EAA1C9H,kBAAmBJ,EAAuBkI,EAAvBlI,UAAWK,EAAY6H,EAAZ7H,QAEhC8H,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,aACnCtE,EAAWG,cAejB,OACI,kBAAC,GAAD,KACI,kBAAC,EAAD,CAAMrF,MAAM,QAAQC,OAAO,OACvB,kBAAC,EAAD,CAAYC,OAAO,kBACf,kBAAC,EAAD,CAASF,MAAM,OAAOC,OAAO,OAAO6D,QAASb,GAA7C,IAA0D,kBAAC,IAAD,CAAStD,KAAK,KAAKC,MAAM,YAAnF,KAEA,kBAAC,EAAD,CAAMD,KAAK,QAAQ8C,OAAO,MAAMvC,OAAO,UAAvC,6BAGJ,kBAAC,GAAD,CAAeD,OAAO,qBACjBoJ,GAASA,EAAMI,KAAI,SAAA3E,GAAG,OACnB,kBAAC,GAAD,CAAkB4E,IAAK5E,EAAIzE,UAAW2I,KAAM,kBAxB7C,SAAAlE,GACf,OAAIA,EAAIrE,SAAiB,kBAAC,IAAD,CAAgBd,KAAK,KAAKC,MAAM,YAElD,kBAAC,IAAD,CAAgBD,KAAK,KAAKC,MAAM,UAqB2B+J,CAAW7E,IAAMmE,IAAKnE,EAAIzE,UAAW+B,KAAM0C,EAAIxE,KAC7F4I,SAAU,kBAnBjB,SAACpE,GACd,IAAMtD,EAAesD,EAAIzE,UACzB6E,EAAStE,EAASS,OAAOC,EAAmBJ,EAAWK,EAASC,IAChEyB,IAgBoCiG,CAASpE,aCgCtC8E,OApEf,YAA4B,IAAR9E,EAAO,EAAPA,IAEVI,EAAWG,cAFM,EAKOhC,mBAAS,IALhB,mBAKhBwG,EALgB,KAKPC,EALO,OAmCWzG,oBAAS,GAnCpB,mBAmChB0G,EAnCgB,KAmCLC,EAnCK,OAsCqB3G,mBAAS,CAAE/B,kBAAmB,GAAIJ,UAAW,EAAGK,QAAS,KAtC9E,mBAsChB6H,EAtCgB,KAsCAa,EAtCA,KA+CvB,OACI,oCACI,kBAAC,EAAD,CAAUjD,GAAG,YAAY0B,YAAY,gBAAgBlI,MAAOqJ,EAASlG,SA1C5D,SAAAuG,GAAK,OAAIJ,EAAWI,EAAMrG,OAAOrD,QA0C+CoH,WAxC9E,WACC,KAAZiC,IACA3E,EAAStE,EAASR,IAAI0E,EAAIzE,UAAWwJ,IACrCC,EAAW,IACX1F,SAAS+F,eAAe,aAAaC,UAoC4ElK,OAAO,cAExH,kBAAC,GAAD,CAAeD,OAAO,sBACjB6E,EAAIlE,SAAS6I,KAAI,SAAClI,EAAS8I,GAAV,OACd,kBAAC,GAAD,CAAUX,IAAG,UAAKW,EAAL,YAAc9I,EAAQlB,WAAaA,UAAWkB,EAAQlB,UAAW+B,KAAMb,EAAQjB,KAAM4H,QAAS3G,EAAQN,KAC/GqH,WAAY,kBApCZpH,EAoC6BmJ,OAnC7CnF,EAAStE,EAASQ,OAAO0D,EAAIzE,UAAWa,IADzB,IAACA,GAqCAiH,UAAW,kBAfb,SAACjH,EAAWK,GAC1B,IAAMD,EAAoBwD,EAAIzE,UAC9B4J,EAAkB,CAAE3I,oBAAmBJ,YAAWK,YAClDyI,GAAa,GAYoB7B,CAAUkC,EAAO9I,IAClC6G,OAAQ,SAAAjH,GAAW,OAlCxB,SAACD,EAAWC,GACnB2D,EAAIlE,SAASM,GAAWZ,OAASa,GACrC+D,EAAStE,EAASC,KAAKiE,EAAIzE,UAAWa,EAAWC,IAgCViH,CAAOiC,EAAOlJ,IACrCkH,SAAU,kBA9BZnH,EA8B2BmJ,OA7BxBC,OAAOC,QAAQ,uBAGhCrF,EAAStE,EAASE,IAAIgE,EAAIzE,UAAWa,KAJxB,IAACA,SAmCT6I,GAAa,kBAAC,GAAD,CAAqBX,eAAgBA,EAAgBnG,WA1BxD,kBAAM+G,GAAa,QCrB3BQ,OAhBf,WAEI,IACMC,EADQnB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,aACVkB,MAAK,SAAA5F,GAAG,OAAIA,EAAIrE,YAG/C,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAOqE,IAAK2F,IACZ,kBAAC,EAAD,CAAkB3F,IAAK2F,IACvB,kBAAC,GAAD,CAAU3F,IAAK2F,MCCZE,OAdf,YAAqC,IAAVtB,EAAS,EAATA,MAEjBuB,EAAgBvB,EAAM7B,OACxBqD,EAAyB,EAG7B,OAFAxB,EAAM3B,SAAQ,SAAA5C,GAAG,QAAIA,EAAIpE,aAAcmK,KAGnC,kBAAC,EAAD,CAAY3K,OAAO,OAAO2B,QAAQ,iBAC9B,kBAAC,EAAD,0BACA,kBAAC,EAAD,CAAMW,QAAM,GAAZ,UAAiBqI,EAAjB,cAA6CD,MCoC1CE,OA1Cf,YAAmC,IAAVzB,EAAS,EAATA,MAEfnE,EAAWG,cA2BjB,OACI,kBAAC,GAAD,CAAepF,OAAO,sBACjBoJ,GAASA,EAAMI,KAAI,SAAC3E,EAAKuF,GAAN,OAChB,kBAAC,GAAD,CAAkBX,IAAK5E,EAAIzE,UAAW2I,KAAM,kBA5BrC,SAAAlE,GACf,OAAIA,EAAIrE,SAAiB,kBAAC,IAAD,CAAgBd,KAAK,KAAKC,MAAM,YAErDkF,EAAIpE,UAAkB,kBAAC,IAAD,CAAef,KAAK,KAAKC,MAAM,YAElD,kBAAC,IAAD,CAASD,KAAK,KAAKC,MAAM,YAuB0B+J,CAAW7E,IAAMmE,IAAKnE,EAAIzE,UAAW+B,KAAM0C,EAAIxE,KAAMK,KAAMmE,EAAInE,KAC7GuI,SAAU,kBArBT,SAAApE,GACbI,EAAS/E,EAASY,OAAO+D,EAAIzE,YAoBD6I,CAASpE,IACzBsD,OAAQ,SAAC2C,GAAD,OAlBT,SAACjG,EAAKiG,GACbjG,EAAIxE,OAASyK,GACjB7F,EAAS/E,EAASU,KAAKiE,EAAIzE,UAAW0K,IAgBL3C,CAAOtD,EAAKiG,IACjC1C,SAAqB,IAAVgC,EAAe,kBAdzB,SAAAvF,GACIwF,OAAOC,QAAQ,yBAGhCrF,EAAS/E,EAASW,IAAIgE,EAAIzE,YAUkBgI,CAASvD,SAAOkG,SCPrDC,OA3Bf,WAEI,IAAM/F,EAAWG,cACX6F,EAAiB5B,aAAY,SAAAC,GAAK,OAAIA,EAAMC,aAHlC,EAKsBnG,mBAAS,IAL/B,mBAKT8H,EALS,KAKIC,EALJ,KAiBhB,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,CAAiB/B,MAAO6B,IACxB,kBAAC,EAAD,CAAUlE,GAAG,gBAAgB0B,YAAY,kBAAkBlI,MAAO2K,EAAaxH,SAbtE,SAAAuG,GAAK,OAAIkB,EAAelB,EAAMrG,OAAOrD,QAaqDoH,WAXxF,WACK,KAAhBuD,IACAjG,EAAS/E,EAASC,IAAT,WAAiB8K,EAAe1D,OAAS,GAAK2D,IACvDC,EAAe,IACfhH,SAAS+F,eAAe,iBAAiBC,UAOkFlK,OAAO,gBAClI,kBAAC,GAAD,CAAemJ,MAAO6B,M,4LCflC,IAAMxG,GAAYlF,IAAO6L,KAAV,MAQAC,GAjBf,WACI,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,iBCSGC,GAnBO,CAClB/B,UAAW,CACP,CACInJ,UAAW,KACXC,KAAM,oBACNG,UAAU,EACVC,WAAW,EACXC,MAAM,EACNC,SAAU,CACN,CACIK,MAAM,EACNZ,UAAW,KACXC,KAAM,uBCZpBkL,GAAwB,SAACN,EAAgB7K,EAAWoL,GACtD,OAAOP,EAAezB,KAAI,SAAC3E,GAAD,OAAUA,EAAIzE,YAAcA,EAClDyE,EAAM2G,EAAe3G,OAGvB4G,GAA0B,SAAA5G,GAC5B,IAAM6G,EAAe7G,EAAIlE,SAAS8J,MAAK,SAAAkB,GAAI,OAAkB,IAAdA,EAAK3K,QACpD,OAAO,YAAC,eACD6D,GADP,IAEIpE,WAAWiL,KCNb9B,GAAU,SAACgC,EAAQxL,EAAW6K,GAChC,IAKIY,EAAoBN,GAAsBN,EAAgB7K,GALtC,SAAAyE,GAAG,kCACpBA,GADoB,IAEvBlE,SAAS,GAAD,oBAAMkE,EAAIlE,UAAV,CAAoBiL,SAMhC,OAFAC,EAAoBN,GAAsBM,EAAmBzL,EAAWqL,KAKtEK,GAAW,SAAC1L,EAAWa,EAAWC,EAAa+J,GACjD,IAMIY,EAAoBN,GAAsBN,EAAgB7K,GANrC,SAAAyE,GAAG,kCACrBA,GADqB,IAExBlE,SAAUkE,EAAIlE,SAAS6I,KAAI,SAACmC,EAAMvB,GAAP,OAAkBA,IAAUnJ,EACnD0K,EADwC,YAAC,eAC7BA,GAD4B,IACtBtL,KAAMa,YAOhC,OAFA2K,EAAoBN,GAAsBM,EAAmBzL,EAAWqL,KAKtEM,GAAU,SAAC9K,EAAWb,EAAW6K,GACnC,IAKIY,EAAoBN,GAAsBN,EAAgB7K,GALtC,SAAAyE,GAAG,kCACpBA,GADoB,IAEvBlE,SAAUkE,EAAIlE,SAASqL,QAAO,SAACL,EAAMvB,GAAP,OAAiBA,IAAUnJ,UAO7D,OAFA4K,EAAoBN,GAAsBM,EAAmBzL,EAAWqL,KAKtEQ,GAAiB,SAAChL,EAAWb,EAAW6K,GAC1C,IAMIY,EAAoBN,GAAsBN,EAAgB7K,GAN/B,SAAAyE,GAAG,kCAC3BA,GAD2B,IAE9BlE,SAAUkE,EAAIlE,SAAS6I,KAAI,SAACmC,EAAMvB,GAAP,OAAkBA,IAAUnJ,EACnD0K,EADwC,YAAC,eAC7BA,GAD4B,IACtB3K,MAAO2K,EAAK3K,eAOtC,OAFA6K,EAAoBN,GAAsBM,EAAmBzL,EAAWqL,KAKtES,GAAa,SAAC9L,EAAWa,EAAWK,EAASC,EAAc0J,GAC7D3J,EAAQlB,UAAYmB,EAEpB,IAAIsK,EAAoBE,GAAQ9K,EAAWb,EAAW6K,GAGtD,OAFAY,EAAoBjC,GAAQtI,EAASC,EAAcsK,ICoExCM,OA3Hf,WAAiD,IAAhC7C,EAA+B,uDAAvBgC,GAAec,EAAQ,uCAC5C,OAAQA,EAAO9L,MAGX,IAAK,eACD,OAAO,2BAAKgJ,GAAZ,IAAmBC,UAAU,GAAD,oBAAMD,EAAMC,WAAZ,CAAuB6C,EAAO7L,UAG9D,IAAK,gBAAkB,IAAD,EACU6L,EAAO7L,MAA3BH,EADU,EACVA,UAAWC,EADD,EACCA,KAEbgM,EAAmB,SAAAxH,GAAG,kCAAUA,GAAV,IAAexE,UAErCiM,EAAWf,GAAsBjC,EAAMC,UAAWnJ,EAAWiM,GAEnE,OAAO,2BAAK/C,GAAZ,IAAmBC,UAAU,aAAK+C,KAGtC,IAAK,eACD,IAAMC,EAAiB,SAAA1H,GAAG,OAAIA,EAAIzE,YAAcgM,EAAO7L,OAEjDiM,EAAmB,SAAC3H,EAAKuF,GAAN,mBAAC,eAAqBvF,GAAtB,IAA2BzE,UAAU,IAAD,SAAQgK,MAE/DkC,EAAWhD,EAAMC,UAAUyC,OAAOO,GAAgB/C,IAAIgD,GAE5D,OAAO,2BAAKlD,GAAZ,IAAmBC,UAAU,aAAK+C,KAGtC,IAAK,kBACD,IAAMA,EAAWhD,EAAMC,UAAUC,KAAI,SAAA3E,GAAG,kCACjCA,GADiC,IAEpCrE,SAAWqE,EAAIzE,YAAcgM,EAAO7L,WAIlCiK,EAAmB8B,EAAS7B,MAAK,SAAA5F,GAAG,OAAIA,EAAIrE,YAGlD,OAFKgK,IAAkB8B,EAASA,EAAS/E,OAAS,GAAG/G,UAAW,GAEzD,2BAAK8I,GAAZ,IAAmBC,UAAU,aAAK+C,KAGtC,IAAK,uBAAyB,IAAD,EACcF,EAAO7L,MAAtCH,EADiB,EACjBA,UAAWM,EADM,EACNA,KAAMD,EADA,EACAA,UAEnBgM,EAAqB,SAAA5H,GAAG,kCAAUA,GAAV,IAAenE,OAAMD,eAE7C6L,EAAWf,GAAsBjC,EAAMC,UAAWnJ,EAAWqM,GAEnE,OAAO,2BAAKnD,GAAZ,IAAmBC,UAAU,aAAK+C,KAGtC,IAAK,gBACD,IAAMlM,EAAYgM,EAAO7L,MACnB0K,EAAc,aAAO3B,EAAMC,WAE3BmD,EAAgBzB,EAAe0B,WAAU,SAAA9H,GAAG,OAAIA,EAAIzE,YAAcA,KAClEwM,EAAetD,EAAMC,UAAUmD,EAAgB,GAYrD,OAVIE,GAEAtD,EAAMC,UAAUmD,GAAelM,UAAW,EAC1C8I,EAAMC,UAAUmD,EAAgB,GAAGlM,UAAW,GAI9CqM,MAAM,0CAGH,2BAAKvD,GAAZ,IAAmBC,UAAW0B,IAIlC,IAAK,WACD,IAAMW,EAASQ,EAAO7L,MAChBH,EAAYgM,EAAO7L,MAAMH,UACzB6K,EAAiB3B,EAAMC,UAEvBsC,EAAoBjC,GAAQgC,EAAQxL,EAAW6K,GAErD,OAAO,2BAAK3B,GAAZ,IAAmBC,UAAU,aAAKsC,KAGtC,IAAK,YAAc,IAAD,EACgCO,EAAO7L,MAA7CH,EADM,EACNA,UAAWa,EADL,EACKA,UAAWC,EADhB,EACgBA,YACxB+J,EAAiB3B,EAAMC,UAEvBsC,EAAoBC,GAAS1L,EAAWa,EAAWC,EAAa+J,GAEtE,OAAO,2BAAK3B,GAAZ,IAAmBC,UAAU,aAAKsC,KAGtC,IAAK,WAAa,IAAD,EACoBO,EAAO7L,MAAhCU,EADK,EACLA,UAAWb,EADN,EACMA,UACb6K,EAAiB3B,EAAMC,UAEvBsC,EAAoBE,GAAQ9K,EAAWb,EAAW6K,GAExD,OAAO,2BAAK3B,GAAZ,IAAmBC,UAAU,aAAKsC,KAGtC,IAAK,cAAgB,IAAD,EACiBO,EAAO7L,MAAhCU,EADQ,EACRA,UAAWb,EADH,EACGA,UACb6K,EAAiB3B,EAAMC,UAEvBsC,EAAoBI,GAAehL,EAAWb,EAAW6K,GAE/D,OAAO,2BAAK3B,GAAZ,IAAmBC,UAAU,aAAKsC,KAGtC,IAAK,cAAgB,IAAD,EACgDO,EAAO7L,MAA/Dc,EADQ,EACRA,kBAAmBJ,EADX,EACWA,UAAWK,EADtB,EACsBA,QAASC,EAD/B,EAC+BA,aACzC0J,EAAiB3B,EAAMC,UAEvBsC,EAAoBK,GAAW7K,EAAmBJ,EAAWK,EAASC,EAAc0J,GAE1F,OAAO,2BAAK3B,GAAZ,IAAmBC,UAAU,aAAKsC,KAGtC,QACI,OAAOvC,ICtHJwD,GAFDC,aAAYZ,ICmBXa,OAdf,WACI,OACI,oCACI,kBAAC,IAAD,CAAUF,MAAOA,IACb,kBAAC,EAAD,MACA,kBAAC,GAAD,OAGJ,kBAAC,EAAD,QCLQG,QACW,cAA7B5C,OAAO6C,SAASC,UAEe,UAA7B9C,OAAO6C,SAASC,UAEhB9C,OAAO6C,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFpJ,SAAS+F,eAAe,SD0HpB,kBAAmBsD,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.110d89f8.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\n\nconst GlobalStyle = createGlobalStyle`\n    /* personalizar a scrollbar */\n    ::-webkit-scrollbar { width: 6px; }\n    ::-webkit-scrollbar-track { background: #e6e6e6; border-radius: 5px; }\n    ::-webkit-scrollbar-thumb { background: rgb(151, 151, 151); border-radius: 5px; }\n    ::-webkit-scrollbar-thumb:hover { background: rgb(99, 99, 99); }\n\n    * {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n        font-family: 'Roboto', sans-serif;\n    }\n    \n    html, body, #root { \n        height: 100%;\n        overflow: hidden;\n        background-color: #E1E5EB;\n    }\n`\n\nexport default GlobalStyle\n","import React from 'react'\nimport { MdTimer } from 'react-icons/md'\nimport styled from 'styled-components'\n\n\nfunction Header() {\n    return (\n        <HeaderStyle>\n            <MdTimer size='42px' color='#2B815F' />\n            <h1 className='title'>Pomodoro</h1>\n        </HeaderStyle>\n    )\n}\n\n\nconst HeaderStyle = styled.header`\n    height: 68px;\n    padding: 0 20px;\n    background: #EEEEF6;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    h1 {\n        margin-left: 20px;\n        color: #2B815F;\n        font-family: 'Courgette', cursive;\n    }\n`\n\nexport default Header","import styled from 'styled-components'\n\n\nconst Card = styled.section`\n    background: #EEEEF6;\n    border-radius: 10px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    width: ${({ width = '100%' }) => width};\n    height: ${({ height = '100%' }) => height};\n    margin: ${({ margin = '0 10px' }) => margin};\n`\n\nexport default Card\n","const pomodoro = {\n    add: (indicator, name) => ({\n        type: 'ADD_POMODORO',\n        value: {\n            indicator,\n            name,\n            selected: false,\n            completed: false,\n            time: false,\n            toDoList: []\n        }\n    }),\n\n    edit: (indicator, name) => ({\n        type: 'EDIT_POMODORO',\n        value: {\n            indicator,\n            name\n        }\n    }),\n\n    del: (indicator) => ({\n        type: 'DEL_POMODORO',\n        value: indicator\n    }),\n\n    select: (indicator) => ({\n        type: 'SELECT_POMODORO',\n        value: indicator\n    }),\n\n    time: (indicator, time, completed = false) => ({\n        type: 'INSERT_TIME_POMODORO',\n        value: {\n            indicator,\n            time,\n            completed\n        }\n    }),\n\n    next: (indicator) => ({\n        type: 'NEXT_POMODORO',\n        value: indicator\n    }),\n}\n\nexport default pomodoro\n","const toDoList = {\n    add: (indicator, name) => ({\n        type: 'ADD_TASK',\n        value: {\n            done: false,\n            indicator,\n            name\n        }\n    }),\n\n    edit: (indicator, indexTask, newNameTask) => ({\n        type: 'EDIT_TASK',\n        value: {\n            indicator,\n            indexTask,\n            newNameTask\n        }\n    }),\n\n    del: (indicator, indexTask) => ({\n        type: 'DEL_TASK',\n        value: {\n            indicator,\n            indexTask\n        }\n    }),\n\n    change: (indicator, indexTask) => ({\n        type: 'CHANGE_DONE',\n        value: {\n            indicator,\n            indexTask\n        }\n    }),\n\n    moving: (indicatorPomodoro, indexTask, objTask, newIndicator) => ({\n        type: 'MOVING_TASK',\n        value: {\n            indicatorPomodoro,\n            indexTask,\n            objTask,\n            newIndicator\n        }\n    }),\n}\n\nexport default toDoList\n","import styled from 'styled-components'\n\n\nconst Horizontal = styled.div`\n    width: ${({ width = 'initial' }) => width};\n    margin: ${({ margin = '0' }) => margin};\n    position: ${({ position = 'initial' }) => position};\n    display: flex;\n    align-items: ${({ align = 'center' }) => align};\n    justify-content: ${({ justify = 'initial' }) => justify};\n`\n\nexport default Horizontal\n","import styled from 'styled-components'\n\n\nconst BtnIcon = styled.button`\n    min-width: ${({ width = '32px' }) => width};\n    min-height: ${({ height = '32px' }) => height};\n    border-radius: 50%;\n    border: none;\n    outline: none;\n    cursor: pointer;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    margin:  ${({ margin = '0' }) => margin};\n    color: ${({ color = '#343434' }) => color};\n    background: ${({ background = 'transparent' }) => background};\n  \n    ${({ shadow }) => shadow ? 'box-shadow: 3px 6px 6px rgba(0, 0, 0, 0.25);' : null}\n    transition: all .8s cubic-bezier(.190, 1.000, .220, 1.000);\n\n    :hover { \n        transform: scale(1.18); \n        background: rgba(50, 50, 50, .1); \n    }\n    \n    :active { opacity: .5; }\n`\n\nexport default BtnIcon\n","import React from 'react'\nimport styled from 'styled-components'\n\n\nfunction Button({ text, ...props }) {\n    return (\n        <Btn {...props}>{text}</Btn>\n    )\n}\n\nconst Btn = styled.button`\n    font-size: 20px;\n    font-weight: bold;\n    padding: 10px 36px;\n    margin: 6px 12px;\n    border-radius: 32px;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    color: ${({ color = '#343434' }) => color};\n    background: ${({ background = '#F5F5F5' }) => background};\n    box-shadow: 3px 6px 6px rgba(0, 0, 0, 0.25);\n\n    transition: all .8s cubic-bezier(.190, 1.000, .220, 1.000);\n\n    :hover { transform: scale(1.08); }\n    :active { opacity: .5; }\n`\n\n\nexport default Button\n","import styled from 'styled-components'\n\n\nconst Text = styled.h3`\n    color: #383838;\n    ${({ nowrap }) => nowrap ? 'white-space: nowrap;' : null};\n    margin: ${({ margin = '0' }) => margin};\n    font-size: ${({ size = '1.17em' }) => size};\n    font-weight: ${({ weight = '500' }) => weight};\n    text-decoration: ${({ scratched }) => scratched ? 'line-through' : 'initial'};\n    cursor: ${({ cursor = 'default' }) => cursor};\n`\n\nexport default Text\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { MdClose } from 'react-icons/md'\nimport Card from '../../../components/Card'\nimport Horizontal from '../../../components/Horizontal'\nimport BtnIcon from '../../../components/BtnIcon'\nimport Text from '../../../components/Text'\n\n\nfunction ModalEditTimer({ closeModal, objTimer, defineObjTimer, convertTimer }) {\n\n    const [timer, setTimer] = useState(() => {\n        const { min: pomodoro } = convertTimer.int(objTimer.pomodoro)\n        const { min: rest } = convertTimer.int(objTimer.rest)\n\n        return { pomodoro, rest }\n    })\n\n    const onChange = e => {\n        const { name, value } = e.target\n        setTimer({ ...timer, [name]: value })\n    }\n\n    const generateObjTime = () => {\n        const pomodoro = convertTimer.string(timer.pomodoro, 0)\n        const rest = convertTimer.string(timer.rest, 0)\n\n        return { pomodoro, rest }\n    }\n\n    const closeModalEditTimer = () => {\n        const { pomodoro, rest } = generateObjTime()\n\n        if (objTimer.pomodoro !== pomodoro || objTimer.rest !== rest) defineObjTimer(pomodoro, rest)\n\n        closeModal()\n    }\n\n\n    return (\n        <Modal>\n            <Card width='400px' height='200px'>\n                <Horizontal margin='12px 16px 18px'>\n                    <BtnIcon width='40px' height='40px' onClick={closeModalEditTimer}> <MdClose size='28' color='#303030' /> </BtnIcon>\n\n                    <Text size='1.4em' weight='700' margin='0 16px'>Editar tempo</Text>\n                </Horizontal>\n\n                <div style={{ margin: '0 16px' }}>\n                    <Horizontal margin='0 0 12px'>\n                        <Text>Pomodoro:</Text>\n                        <Input value={timer.pomodoro} name='pomodoro' onChange={onChange} type=\"number\" autoFocus />\n                    </Horizontal>\n\n                    <Horizontal>\n                        <Text>Descanso:</Text>\n                        <Input value={timer.rest} name='rest' onChange={onChange} type=\"number\" mf='15px' />\n                    </Horizontal>\n                </div>\n            </Card>\n        </Modal>\n    )\n}\n\nconst Modal = styled.section`\n    background-color: rgba(0, 0, 0, .5);\n    position: absolute; z-index: 10;\n    top: 0; right: 0; bottom: 0; left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst Input = styled.input`\n    padding: 4px 10px;\n    margin-left: ${({ mf = '10px' }) => mf};\n    width: 100%;\n    color: #383838;\n    font-weight: 500;\n    font-size: 1.20em;\n`\n\nexport default ModalEditTimer\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { MdSettings, MdAlarm, MdAlarmOff } from 'react-icons/md'\nimport { useDispatch } from 'react-redux'\nimport { pomodoro } from '../../../../store/actions'\nimport Horizontal from '../../../components/Horizontal'\nimport BtnIcon from '../../../components/BtnIcon'\nimport Button from '../../../components/Button'\nimport ModalEditTimer from './ModalEditTimer'\n\n\nconst setPageTitle = newTitle => document.title = newTitle\n\nconst convertTimer = {\n    int: (timer) => {\n        const arrayTimer = timer.split(':')\n\n        const min = parseInt(arrayTimer[0])\n        const seg = parseInt(arrayTimer[1])\n\n        return { min, seg }\n    },\n\n    string: (min, seg) => {\n\n        if (min < 10 && min >= 0) min = `0${min}`\n        if (seg < 10) seg = `0${seg}`\n\n        return `${min}:${seg}`\n    }\n}\n\nconst calcTimer = (timer, initialTimer) => {\n    const { min, seg } = convertTimer.int(timer)\n    const { min: minInit, seg: segInit } = convertTimer.int(initialTimer)\n\n    if (min < 0) {\n        const newMin = minInit + (min * -1 - 1)\n        const newSeg = segInit + (60 - seg)\n\n        return convertTimer.string(newMin, newSeg)\n    }\n\n    return initialTimer\n}\n\nconst timerDecrement = time => {\n    let { min, seg } = convertTimer.int(time)\n\n    if (seg === 0) {\n        min -= 1;\n        seg = 60;\n    }\n\n    seg -= 1\n\n    return { min, seg }\n}\n\n\nfunction Timer({ obj }) {\n\n    useEffect(() => {\n        if (oldObj.indicator !== obj.indicator && idInterval !== '') {\n            dispatch(pomodoro.time(oldObj.indicator, timer, false))\n            resetTimer()\n        }\n\n        if (oldObj.indicator !== obj.indicator) {\n            setTimer(obj.time || objTimer.pomodoro)\n            setOldObj(obj)\n        }\n    }, [obj])\n    // }, [dispatch, obj, oldObj, idInterval, resetTimer, timer])\n\n    const dispatch = useDispatch()\n\n\n    // ------------- Modal Timer -------------  \n    const [modalTimer, setModalTimer] = useState(false)\n    const openModalTimer = () => setModalTimer(true)\n    const closeModalTimer = () => setModalTimer(false)\n\n    const [objTimer, setObjTimer] = useState({\n        pomodoro: localStorage.getItem('pomodoro') || '25:00',\n        rest: localStorage.getItem('rest') || '05:00'\n    })\n\n    const defineObjTimer = (pomodoroTime = '25:00', restTime = '05:00') => {\n        const pomodoro = pomodoroTime\n        const rest = restTime\n\n        localStorage.setItem('pomodoro', pomodoro)\n        localStorage.setItem('rest', rest)\n\n        setObjTimer({ pomodoro, rest })\n\n        if (idInterval === '') setTimer(pomodoro)\n    }\n\n\n    // ------------- Timer State -------------  \n    let soundAlert = new Audio('https://www.w3schools.com/html/horse.mp3')\n    const [oldObj, setOldObj] = useState(obj)\n    const [timer, setTimer] = useState(objTimer.pomodoro)\n    const [idInterval, setIdInterval] = useState('')\n    const [reset, setReset] = useState(false)\n    const [conclude, setConclude] = useState(false)\n    const [rest, setRest] = useState(false)\n    const [soundOn, setSoundOn] = useState(true)\n\n\n    // ------------- Timer Functions -------------  \n    const changeTimer = () => setTimer(time => {\n\n        const { min, seg } = timerDecrement(time)\n\n        if (min <= 0 && seg === 0) {\n            if (soundOn) soundAlert.play()\n            setConclude(true)\n        }\n\n        const newTimer = convertTimer.string(min, seg)\n\n        setPageTitle(`${obj.indicator}) ${newTimer}`)\n\n        return newTimer\n    })\n\n    const startTimer = () => {\n        if (idInterval !== '') return\n        if (timer.slice(0, 1) === '-') setConclude(true)\n\n        const id = setInterval(changeTimer, 1000)\n        setIdInterval(id)\n        setReset(false)\n    }\n\n    const pauseTimer = () => {\n        clearTimeout(idInterval)\n        setIdInterval('')\n        if (timer !== objTimer.pomodoro) setReset(true)\n        setConclude(false)\n    }\n\n    const resetTimer = () => {\n        clearTimeout(idInterval)\n        setIdInterval('')\n        setTimer(rest ? objTimer.rest : objTimer.pomodoro)\n        setPageTitle('Pomodoro')\n        setReset(false)\n        setConclude(false)\n    }\n\n    const concludePomodoro = () => {\n        if (!rest) {\n\n            const time = calcTimer(timer, objTimer.pomodoro)\n            dispatch(pomodoro.time(obj.indicator, time, true))\n            setRest(true)\n            resetTimer()\n            setTimer(objTimer.rest)\n\n        } else {\n\n            setRest(false)\n            resetTimer()\n            setTimer(objTimer.pomodoro)\n            dispatch(pomodoro.next(obj.indicator))\n        }\n    }\n\n    // const testeSound = () => {\n    // let teste = new Audio('https://www.soundjay.com/button/sounds/beep-01a.mp3')\n    // teste.preload = 'none'\n    // teste.src = './alarm.ogg' // com essa linha comentada funciona\n    // const teste = document.getElementById('alarm')\n    // console.log(teste)\n    // teste.play()\n    // }\n\n    const soundOnChange = () => setSoundOn(sound => !sound)\n\n\n    return (\n        <Container>\n            <Horizontal width='100%' margin='0 0 20px 0' justify='center' position='relative'>\n                <BtnIcon onClick={openModalTimer} className='settings' width='36px' height='36px' background='#F5F5F5' shadow>\n                    <MdSettings size='24' />\n                </BtnIcon>\n\n                <Horizontal position='relative'>\n                    <DisplayTimer rest={rest}>{timer}</DisplayTimer>\n\n                    {/* <audio id='alarm' controls>\n                        <source srcSet=\"./alarm.ogg\" type=\"audio/ogg\" />\n                        <source srcSet=\"./alarm.mp3\" type=\"audio/mpeg\" />\n                    </audio> */}\n\n                    <BtnIcon onClick={soundOnChange} className='clock' width='36px' height='36px' background='#F5F5F5' shadow>\n                        {soundOn ?\n                            <MdAlarm size='24' /> :\n                            <MdAlarmOff size='24' />\n                        }\n                    </BtnIcon>\n                </Horizontal>\n            </Horizontal>\n\n            <Horizontal>\n                {(conclude) ?\n                    <Button onClick={concludePomodoro} text='CONCLUIR' background='#4EB089' color='white' /> :\n                    <Button onClick={startTimer} text='INICIAR' background='#4EB089' color='white' />\n                }\n\n                {(reset) ?\n                    <Button onClick={resetTimer} text='ZERAR' /> :\n                    <Button onClick={pauseTimer} text='PARAR' />\n                }\n            </Horizontal>\n\n            {modalTimer && <ModalEditTimer closeModal={closeModalTimer} objTimer={objTimer} defineObjTimer={defineObjTimer} convertTimer={convertTimer} />}\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    height: 170px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    \n    .settings {\n        position: absolute;\n        top: -10px; left: 14px;\n    }\n\n    .clock {\n        position: absolute;\n        top: 5px; right: -55px;\n    }\n`\n\nconst DisplayTimer = styled.h2`\n    color: ${({ rest }) => !rest ? '#343434' : '#4EB089'};\n    font-family: monospace; \n    font-size: 44px;\n    cursor: default;\n`\n\nexport default Timer\n","import styled from 'styled-components'\n\n\nconst Line = styled.div`\n    ${({ width }) => width ? `width: ${width};` : 'flex-grow: 1;'};\n    height: 3px;\n    border-radius: 10px;\n    margin: 0 16px;\n    background-color: #BEBEBE;\n`\n\nexport default Line\n","import React from 'react'\nimport Horizontal from '../../components/Horizontal'\nimport Text from '../../components/Text'\nimport Line from '../../components/Line'\n\n\nfunction SelectedPomodoro({ obj }) {\n\n    const countToDo = obj.toDoList.length\n    let countToDoCompleted = 0\n    obj.toDoList.forEach(obj => obj.done ? ++countToDoCompleted : false)\n\n\n    return (\n        <Horizontal margin='0 16px'>\n            <Text>Pomodoro: {`${obj.indicator} - ${obj.name}`}</Text>\n            <Line />\n            <Text nowrap>{`${countToDoCompleted} - ${countToDo}`}</Text>\n        </Horizontal>\n    )\n}\n\nexport default SelectedPomodoro\n","import React from 'react'\nimport styled from 'styled-components'\nimport { MdAdd } from 'react-icons/md'\nimport BtnIcon from './BtnIcon'\n\n\nfunction InputAdd({ onClickAdd = () => { }, margin, ...props }) {\n    return (\n        <Container margin={margin}>\n            <Input {...props} />\n            <BtnIcon onClick={onClickAdd}> <MdAdd size='24' color='#303030' /> </BtnIcon>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    margin: ${({ margin = '0' }) => margin};\n    padding: 4px 10px;\n    border-radius: 30px;\n    background-color: #FFFFFF;\n    display: flex;\n    align-items: center;\n`\n\nconst Input = styled.input`\n    width: 100%;\n    margin: 0 10px;\n    font-size: 18px;\n    border: none;\n    outline: none;\n    color: #303030;\n`\n\nexport default InputAdd\n","import styled from 'styled-components'\n\n\nconst InputNoBorder = styled.input`\n    width: ${({ width = '88%' }) => width};\n    border: none;\n    color: #383838;\n    font-weight: 500;\n    font-size: 1.17em;\n`\n\nexport default InputNoBorder\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Horizontal from '../../../components/Horizontal'\nimport Text from '../../../components/Text'\nimport { MdCheckBoxOutlineBlank, MdCheckBox, MdArrowDropDown, MdDeleteForever } from 'react-icons/md'\nimport BtnIcon from '../../../components/BtnIcon'\nimport InputNoBorder from '../../../components/InputNoBorder'\n\n\nfunction ItemList({ indicator, text, checked, openModal, onEdit, onDelete, changeDone }) {\n\n    const [openEdit, setOpenEdit] = useState(false)\n    const [value, setValue] = useState(text)\n\n    const clickEdit = () => setOpenEdit(true)\n\n    const onChange = e => setValue(e.target.value)\n\n    const onBlur = () => {\n        onEdit(value)\n        setOpenEdit(false)\n    }\n\n\n    return (\n        <Horizontal margin='0 0 10px'>\n            <Card onClick={changeDone} padding='0 5px' cursor='pointer' selected={checked}>\n                {checked ?\n                    <MdCheckBox size='26' color='#4EB089' /> :\n                    <MdCheckBoxOutlineBlank size='26' color='#4EB089' />\n                }\n            </Card>\n\n            <Card margin='0 8px' selected={checked}>\n                <Text margin='0 6px 0 12px'>{indicator}</Text>\n                <BtnIcon onClick={openModal}> <MdArrowDropDown size='24' color='#303030' /> </BtnIcon>\n            </Card>\n\n            <Card className='teste' width='100%' padding='0 4px 0 12px' justify='space-between' selected={checked} hidden>\n                {(onEdit && !openEdit) ?\n                    <Text onClick={clickEdit} scratched={checked} cursor='text'>{text}</Text> :\n                    <InputNoBorder placeholder='Tarefa' value={value} onChange={onChange} onBlur={onBlur} autoFocus />\n                }\n\n                <ContainerbtnDel className='hide'>\n                    <BtnIcon onClick={onDelete}> <MdDeleteForever size='24' color='#303030' /> </BtnIcon>\n                </ContainerbtnDel>\n            </Card>\n        </Horizontal>\n    )\n}\n\nconst Card = styled.div`\n    width: ${({ width = 'initial' }) => width};\n    height: 38px;\n    border-radius: 6px;\n    background: #FFFFFF;\n        \n    padding: ${({ padding = '0' }) => padding};\n    margin: ${({ margin = '0' }) => margin};\n    border: 2px solid ${({ selected }) => selected ? '#4EB089' : '#FFFFFF'};\n\n    display: flex;\n    align-items: center;\n    justify-content: ${({ justify = 'initial' }) => justify};\n\n    box-shadow: 0px 2px 2px .5px rgba(0, 0, 0, 0.25);\n    cursor: ${({ cursor = 'default' }) => cursor};\n    position: relative;\n    ${({ hidden }) => hidden ? 'overflow: hidden;' : null};\n\n    .hide {\n        position: relative;\n        right: -40px;\n        transition: right 300ms ease-in;\n    }\n\n    :hover .hide { right: 0; }\n`\n\nconst ContainerbtnDel = styled.div`\n    button svg { transition: fill 500ms ease-out; }\n\n    :hover button svg { fill: #B50000; }\n`\n\nexport default ItemList\n","import styled from 'styled-components'\n\n\nconst ContainerList = styled.div`\n    margin: ${({ margin = '0 20px' }) => margin};\n    padding: ${({ padding = ' 0 4px' }) => padding};\n    height: ${({ height = 'initial' }) => height};\n    overflow-y: auto;\n`\n\nexport default ContainerList\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { MdDeleteForever } from 'react-icons/md'\nimport Horizontal from './Horizontal'\nimport Text from './Text'\nimport BtnIcon from './BtnIcon'\nimport InputNoBorder from './InputNoBorder'\n\n\nfunction ItemListPomodoro({ icon: Icon, num, text, time, onSelect, onEdit, onDelete }) {\n\n    const [openEdit, setOpenEdit] = useState(false)\n    const [value, setValue] = useState(text)\n\n    const clickEdit = () => setOpenEdit(true)\n\n    const onChange = e => setValue(e.target.value)\n\n    const onBlur = () => {\n        onEdit(value)\n        setOpenEdit(false)\n    }\n\n\n    return (\n        <Card onClick={onSelect} name='cardItem' className='teste' padding='0 12px' justify='space-between'>\n            <Horizontal width='100%'>\n                {Icon && <Icon />}\n\n                <Text margin='0 8px 0 12px' nowrap>{`${num} - `}</Text>\n\n                {(onEdit && openEdit) ?\n                    <InputNoBorder width='75%' placeholder='Pomodoro' value={value} onChange={onChange} onBlur={onBlur} autoFocus /> :\n                    <Text onClick={clickEdit} cursor='text'>{text}</Text>\n                }\n            </Horizontal>\n\n            {time && <Text className='none' weight='300' size='1em'>{time}</Text>}\n\n            {onDelete && <ContainerBtnDel className='hide'>\n                <BtnIcon name='btnDel' onClick={onDelete}> <MdDeleteForever size='24' color='#303030' /> </BtnIcon>\n            </ContainerBtnDel>}\n        </Card>\n    )\n}\n\nconst Card = styled.div`\n    height: 44px;\n    border-radius: 10px;\n    background: #FFFFFF;\n    \n    padding: ${({ padding = '0' }) => padding};\n    margin: ${({ margin = '0 0 12px' }) => margin};\n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    box-shadow: 0px 3px 3px .5px rgba(0, 0, 0, 0.25);\n    cursor: pointer;\n    overflow: hidden;\n    position: relative;\n\n    .hide {\n        position: absolute;\n        transition: right 300ms ease-in;\n        right: -40px;\n    }\n\n    .none { transition: opacity 400ms ease; }\n\n    :hover .hide { right: 8px; }\n    :hover .none { opacity: 0; }\n`\n\nconst ContainerBtnDel = styled.div`\n    button svg { transition: fill 500ms ease-out; }\n    :hover button svg { fill: #B50000; }\n`\n\nexport default ItemListPomodoro\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { MdClose, MdArrowForward } from 'react-icons/md'\nimport Card from '../../../components/Card'\nimport Horizontal from '../../../components/Horizontal'\nimport BtnIcon from '../../../components/BtnIcon'\nimport Text from '../../../components/Text'\nimport ContainerList from '../../../components/ContainerList'\nimport ItemListPomodoro from '../../../components/ItemListPomodoro'\nimport { toDoList } from '../../../../store/actions'\n\n\nfunction ModalSelectPomodoro({ selectedObject, closeModal }) {\n\n    const { indicatorPomodoro, indexTask, objTask } = selectedObject\n\n    const array = useSelector(state => state.pomodoros)\n    const dispatch = useDispatch()\n\n    const selectIcon = obj => {\n        if (obj.selected) return <MdArrowForward size='24' color='#004678' />\n\n        return <MdArrowForward size='24' color='white' />\n    }\n\n    const onSelect = (obj) => {\n        const newIndicator = obj.indicator\n        dispatch(toDoList.moving(indicatorPomodoro, indexTask, objTask, newIndicator))\n        closeModal()\n    }\n\n\n    return (\n        <Modal>\n            <Card width='600px' height='80%'>\n                <Horizontal margin='12px 16px 18px'>\n                    <BtnIcon width='40px' height='40px' onClick={closeModal}> <MdClose size='28' color='#303030' /> </BtnIcon>\n\n                    <Text size='1.4em' weight='700' margin='0 16px'>Mudar tarefa de Pomodoro</Text>\n                </Horizontal>\n\n                <ContainerList height='calc(100% - 85px)' >\n                    {array && array.map(obj => (\n                        <ItemListPomodoro key={obj.indicator} icon={() => selectIcon(obj)} num={obj.indicator} text={obj.name}\n                            onSelect={() => onSelect(obj)} />\n                    ))}\n                </ContainerList >\n            </Card>\n        </Modal>\n    )\n}\n\nconst Modal = styled.section`\n    background-color: rgba(0, 0, 0, .5);\n    position: absolute; z-index: 10;\n    top: 0; right: 0; bottom: 0; left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    div[name=cardItem] svg { transition: fill 500ms ease; }\n    div[name=cardItem]:hover svg { fill: #199110; }\n`\n\nexport default ModalSelectPomodoro\n","import React, { useState } from 'react'\nimport InputAdd from '../../../components/InputAdd'\nimport ItemList from './ItemList'\nimport { useDispatch } from 'react-redux'\nimport { toDoList } from '../../../../store/actions'\nimport ContainerList from '../../../components/ContainerList'\nimport ModalSelectPomodoro from './ModalSelectPomodoro'\n\n\nfunction ToDoList({ obj }) {\n\n    const dispatch = useDispatch()\n\n    // --------- input add ---------\n    const [newTask, setNewTask] = useState('')\n\n    const onChange = event => setNewTask(event.target.value)\n\n    const onClickAdd = () => {\n        if (newTask !== '') {\n            dispatch(toDoList.add(obj.indicator, newTask))\n            setNewTask('')\n            document.getElementById('inputTask').focus()\n        }\n    }\n\n    // --------- to Do List ---------\n    const changeDone = (indexTask) => {\n        dispatch(toDoList.change(obj.indicator, indexTask))\n    }\n\n    const onEdit = (indexTask, newNameTask) => {\n        if (obj.toDoList[indexTask].name === newNameTask) return\n        dispatch(toDoList.edit(obj.indicator, indexTask, newNameTask))\n    }\n\n    const onDelete = (indexTask) => {\n        const response = window.confirm('Excluir a Tarefa ?')\n        if (!response) return\n\n        dispatch(toDoList.del(obj.indicator, indexTask))\n    }\n\n    // --------- Modal Select Pomodoro ---------\n    const [modalOpen, setModalOpen] = useState(false)\n    const closeModal = () => setModalOpen(false)\n\n    const [selectedObject, setSelectedObject] = useState({ indicatorPomodoro: '', indexTask: 0, objTask: {} })\n\n    const openModal = (indexTask, objTask) => {\n        const indicatorPomodoro = obj.indicator\n        setSelectedObject({ indicatorPomodoro, indexTask, objTask })\n        setModalOpen(true)\n    }\n\n\n    return (\n        <>\n            <InputAdd id='inputTask' placeholder='Nova Tarefa: ' value={newTask} onChange={onChange} onClickAdd={onClickAdd} margin='12px 24px' />\n\n            <ContainerList height='calc(100% - 265px)'>\n                {obj.toDoList.map((objTask, index) => (\n                    <ItemList key={`${index}+${objTask.indicator}`} indicator={objTask.indicator} text={objTask.name} checked={objTask.done}\n                        changeDone={() => changeDone(index)}\n                        openModal={() => openModal(index, objTask)}\n                        onEdit={newNameTask => onEdit(index, newNameTask)}\n                        onDelete={() => onDelete(index)}\n                    />\n                ))}\n            </ContainerList>\n\n            {modalOpen && <ModalSelectPomodoro selectedObject={selectedObject} closeModal={closeModal} />}\n        </>\n    )\n}\n\n\nexport default ToDoList\n","import React from 'react'\nimport Card from '../../components/Card'\nimport Timer from './timer'\nimport SelectedPomodoro from './SelectedPomodoro'\nimport ToDoList from './toDoList'\nimport { useSelector } from 'react-redux'\n\n\nfunction CardTimer() {\n\n    const array = useSelector(state => state.pomodoros)\n    const pomodoroSelected = array.find(obj => obj.selected)\n\n\n    return (\n        <Card>\n            <Timer obj={pomodoroSelected} />\n            <SelectedPomodoro obj={pomodoroSelected} />\n            <ToDoList obj={pomodoroSelected} />\n        </Card>\n    )\n}\n\n\nexport default CardTimer\n","import React from 'react'\nimport Horizontal from '../../components/Horizontal'\nimport Text from '../../components/Text'\n\n\nfunction CounterPomodoro({ array }) {\n\n    const countPomodoro = array.length\n    let countPomodoroCompleted = 0\n    array.forEach(obj => obj.completed ? ++countPomodoroCompleted : false)\n\n    return (\n        <Horizontal margin='20px' justify='space-between'>\n            <Text>Objetivo diario: </Text>\n            <Text nowrap>{`${countPomodoroCompleted} - ${countPomodoro}`}</Text>\n        </Horizontal>\n    )\n}\n\nexport default CounterPomodoro\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { MdCheckCircle, MdArrowForward, MdTimer } from 'react-icons/md'\nimport { pomodoro } from '../../../store/actions'\nimport ContainerList from '../../components/ContainerList'\nimport ItemListPomodoro from '../../components/ItemListPomodoro'\n\n\nfunction ListPomodoros({ array }) {\n\n    const dispatch = useDispatch()\n\n    const selectIcon = obj => {\n        if (obj.selected) return <MdArrowForward size='24' color='#004678' />\n\n        if (obj.completed) return <MdCheckCircle size='24' color='#4EB089' />\n\n        return <MdTimer size='24' color='#383838' />\n    }\n\n    const onSelect = obj => {\n        dispatch(pomodoro.select(obj.indicator))\n    }\n\n    const onEdit = (obj, newName) => {\n        if (obj.name === newName) return\n        dispatch(pomodoro.edit(obj.indicator, newName))\n    }\n\n    const onDelete = obj => {\n        const response = window.confirm('Excluir o Pomodoro ?')\n        if (!response) return\n\n        dispatch(pomodoro.del(obj.indicator))\n    }\n\n\n    return (\n        <ContainerList height='calc(100% - 130px)' >\n            {array && array.map((obj, index) => (\n                <ItemListPomodoro key={obj.indicator} icon={() => selectIcon(obj)} num={obj.indicator} text={obj.name} time={obj.time}\n                    onSelect={() => onSelect(obj)}\n                    onEdit={(newName) => onEdit(obj, newName)}\n                    onDelete={(index !== 0) ? () => onDelete(obj) : undefined} /> // tirando o btn de del do primeiro pomodoro\n            ))}\n        </ContainerList >\n    )\n}\n\n\nexport default ListPomodoros\n","import React, { useState } from 'react'\nimport Card from '../../components/Card'\nimport CounterPomodoro from './CounterPomodoro'\nimport InputAdd from '../../components/InputAdd'\nimport ListPomodoros from './ListPomodoros'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { pomodoro } from '../../../store/actions'\n\n\nfunction CardList() {\n\n    const dispatch = useDispatch()\n    const arrayPomodoros = useSelector(state => state.pomodoros)\n\n    const [newPomodoro, setNewPomodoro] = useState('')\n\n    const onChange = event => setNewPomodoro(event.target.value)\n\n    const onClickAdd = () => {\n        if (newPomodoro !== '') {\n            dispatch(pomodoro.add(`#${arrayPomodoros.length + 1}`, newPomodoro))\n            setNewPomodoro('')\n            document.getElementById('inputPomodoro').focus()\n        }\n    }\n\n    return (\n        <Card>\n            <CounterPomodoro array={arrayPomodoros} />\n            <InputAdd id='inputPomodoro' placeholder='Novo Pomodoro: ' value={newPomodoro} onChange={onChange} onClickAdd={onClickAdd} margin='0 24px 18px' />\n            <ListPomodoros array={arrayPomodoros} />\n        </Card>\n    )\n}\n\n\nexport default CardList\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTimer from './cardTimer'\nimport CardList from './cardList'\n\n\nfunction ContainerPomodoro() {\n    return (\n        <Container>\n            <CardTimer />\n            <CardList />\n        </Container>\n    )\n}\n\nconst Container = styled.main`\n    display: flex;\n    max-width: 1300px;\n    height: calc(100% - 68px);\n    margin: auto;\n    padding: 20px;\n`\n\nexport default ContainerPomodoro","const INITIAL_STATE = {\n    pomodoros: [\n        {\n            indicator: '#1',\n            name: 'Primeiro pomodoro',\n            selected: true,\n            completed: false,\n            time: false,\n            toDoList: [\n                {\n                    done: false,\n                    indicator: '#1',\n                    name: 'Primeira tarefa',\n                }\n            ]\n        }\n    ]\n}\n\nexport default INITIAL_STATE\n","const findAndModifyPomodoro = (arrayPomodoros, indicator, functionModify) => {\n    return arrayPomodoros.map((obj) => (obj.indicator !== indicator) ?\n        obj : functionModify(obj))\n}\n\nconst verifyCompletedPomodoro = obj => {\n    const objDoneFalse = obj.toDoList.find(task => task.done === false)\n    return ({\n        ...obj,\n        completed: objDoneFalse ? false : true\n    })\n}\n\nexport {\n    findAndModifyPomodoro,\n    verifyCompletedPomodoro\n}\n","import { findAndModifyPomodoro, verifyCompletedPomodoro } from './pomodoroHelpers'\n\n\nconst newTask = (newObj, indicator, arrayPomodoros) => {\n    const newTaskPomodoro = obj => ({\n        ...obj,\n        toDoList: [...obj.toDoList, newObj]\n    })\n\n    let newArrayPomodoros = findAndModifyPomodoro(arrayPomodoros, indicator, newTaskPomodoro)\n    newArrayPomodoros = findAndModifyPomodoro(newArrayPomodoros, indicator, verifyCompletedPomodoro)\n\n    return newArrayPomodoros\n}\n\nconst editTask = (indicator, indexTask, newNameTask, arrayPomodoros) => {\n    const editTaskPomodoro = obj => ({\n        ...obj,\n        toDoList: obj.toDoList.map((task, index) => (index !== indexTask) ?\n            task : { ...task, name: newNameTask })\n    })\n\n    let newArrayPomodoros = findAndModifyPomodoro(arrayPomodoros, indicator, editTaskPomodoro)\n\n    newArrayPomodoros = findAndModifyPomodoro(newArrayPomodoros, indicator, verifyCompletedPomodoro)\n\n    return newArrayPomodoros\n}\n\nconst delTask = (indexTask, indicator, arrayPomodoros) => {\n    const delTaskPomodoro = obj => ({\n        ...obj,\n        toDoList: obj.toDoList.filter((task, index) => index !== indexTask)\n    })\n\n    let newArrayPomodoros = findAndModifyPomodoro(arrayPomodoros, indicator, delTaskPomodoro)\n\n    newArrayPomodoros = findAndModifyPomodoro(newArrayPomodoros, indicator, verifyCompletedPomodoro)\n\n    return newArrayPomodoros\n}\n\nconst changeDoneTask = (indexTask, indicator, arrayPomodoros) => {\n    const changeDoneTaskPomodoro = obj => ({\n        ...obj,\n        toDoList: obj.toDoList.map((task, index) => (index !== indexTask) ?\n            task : { ...task, done: !task.done })\n    })\n\n    let newArrayPomodoros = findAndModifyPomodoro(arrayPomodoros, indicator, changeDoneTaskPomodoro)\n\n    newArrayPomodoros = findAndModifyPomodoro(newArrayPomodoros, indicator, verifyCompletedPomodoro)\n\n    return newArrayPomodoros\n}\n\nconst movingTask = (indicator, indexTask, objTask, newIndicator, arrayPomodoros) => {\n    objTask.indicator = newIndicator\n\n    let newArrayPomodoros = delTask(indexTask, indicator, arrayPomodoros)\n    newArrayPomodoros = newTask(objTask, newIndicator, newArrayPomodoros)\n\n    return newArrayPomodoros\n}\n\n\nexport {\n    newTask,\n    editTask,\n    delTask,\n    changeDoneTask,\n    movingTask\n}\n","import INITIAL_STATE from './state'\nimport { findAndModifyPomodoro } from \"./helpers/pomodoroHelpers\"\nimport { newTask, editTask, delTask, changeDoneTask, movingTask } from './helpers/taskHelpers'\n\n\nfunction reducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n\n        // -------- Pomodoro ---------\n        case 'ADD_POMODORO': {\n            return { ...state, pomodoros: [...state.pomodoros, action.value] }\n        }\n\n        case 'EDIT_POMODORO': {\n            const { indicator, name } = action.value\n\n            const editNamePomodoro = obj => ({ ...obj, name })\n\n            const newArray = findAndModifyPomodoro(state.pomodoros, indicator, editNamePomodoro)\n\n            return { ...state, pomodoros: [...newArray] }\n        }\n\n        case 'DEL_POMODORO': {\n            const removePomodoro = obj => obj.indicator !== action.value\n\n            const rearrangingArray = (obj, index) => ({ ...obj, indicator: `#${++index}` })\n\n            const newArray = state.pomodoros.filter(removePomodoro).map(rearrangingArray)\n\n            return { ...state, pomodoros: [...newArray] }\n        }\n\n        case 'SELECT_POMODORO': {\n            const newArray = state.pomodoros.map(obj => ({\n                ...obj,\n                selected: (obj.indicator === action.value) ? true : false\n            }))\n\n            // validando se selecionou, senão seleciona o ultimo\n            const pomodoroSelected = newArray.find(obj => obj.selected)\n            if (!pomodoroSelected) newArray[newArray.length - 1].selected = true\n\n            return { ...state, pomodoros: [...newArray] }\n        }\n\n        case 'INSERT_TIME_POMODORO': {\n            const { indicator, time, completed } = action.value\n\n            const insertTimePomodoro = obj => ({ ...obj, time, completed })\n\n            const newArray = findAndModifyPomodoro(state.pomodoros, indicator, insertTimePomodoro)\n\n            return { ...state, pomodoros: [...newArray] }\n        }\n\n        case 'NEXT_POMODORO': {\n            const indicator = action.value\n            const arrayPomodoros = [...state.pomodoros]\n\n            const indexPomodoro = arrayPomodoros.findIndex(obj => obj.indicator === indicator)\n            const nextPomodoro = state.pomodoros[indexPomodoro + 1]\n\n            if (nextPomodoro) {\n\n                state.pomodoros[indexPomodoro].selected = false\n                state.pomodoros[indexPomodoro + 1].selected = true\n\n            } else {\n\n                alert('Todos os Pomodoros foram concluidos!!!')\n            }\n\n            return { ...state, pomodoros: arrayPomodoros }\n        }\n\n        // -------- ToDoList ---------\n        case 'ADD_TASK': {\n            const newObj = action.value\n            const indicator = action.value.indicator\n            const arrayPomodoros = state.pomodoros\n\n            const newArrayPomodoros = newTask(newObj, indicator, arrayPomodoros)\n\n            return { ...state, pomodoros: [...newArrayPomodoros] }\n        }\n\n        case 'EDIT_TASK': {\n            const { indicator, indexTask, newNameTask } = action.value\n            const arrayPomodoros = state.pomodoros\n\n            const newArrayPomodoros = editTask(indicator, indexTask, newNameTask, arrayPomodoros)\n\n            return { ...state, pomodoros: [...newArrayPomodoros] }\n        }\n\n        case 'DEL_TASK': {\n            const { indexTask, indicator } = action.value\n            const arrayPomodoros = state.pomodoros\n\n            const newArrayPomodoros = delTask(indexTask, indicator, arrayPomodoros)\n\n            return { ...state, pomodoros: [...newArrayPomodoros] }\n        }\n\n        case 'CHANGE_DONE': {\n            const { indexTask, indicator } = action.value\n            const arrayPomodoros = state.pomodoros\n\n            const newArrayPomodoros = changeDoneTask(indexTask, indicator, arrayPomodoros)\n\n            return { ...state, pomodoros: [...newArrayPomodoros] }\n        }\n\n        case 'MOVING_TASK': {\n            const { indicatorPomodoro, indexTask, objTask, newIndicator } = action.value\n            const arrayPomodoros = state.pomodoros\n\n            const newArrayPomodoros = movingTask(indicatorPomodoro, indexTask, objTask, newIndicator, arrayPomodoros)\n\n            return { ...state, pomodoros: [...newArrayPomodoros] }\n        }\n\n        default:\n            return state\n    }\n}\n\nexport default reducer\n","import { createStore } from 'redux'\nimport reducer from './reducer'\n\n\nconst store = createStore(reducer)\n\nexport default store\n","import React from 'react'\nimport GlobalStyle from './GlobalStyle'\nimport Header from './Header'\nimport ContainerPomodoro from './containerPomodoro'\n\nimport { Provider } from 'react-redux'\nimport store from '../store'\n\n\nfunction App() {\n    return (\n        <>\n            <Provider store={store}>\n                <Header />\n                <ContainerPomodoro />\n            </Provider>\n\n            <GlobalStyle />\n        </>\n    )\n}\n\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}